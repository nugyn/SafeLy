{"version":3,"sources":["assets/img/loading.svg","components/Login.js","components/Register.js","components/Map.js","components/SelectTime.js","components/MapDirection.js","components/Congrats.js","components/Qrcode.js","components/Direction.js","components/End.js","components/Scanner.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Component","mapStyles","position","width","height","zIndex","marginTop","left","transform","clipPath","MapContainer","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentLocation","lat","lng","inherits","createClass","key","value","react_default","a","createElement","dist","google","props","zoom","style","initialCenter","GoogleApiWrapper","apiKey","MapDirection","window","finalPosition","lineCoordinates","setState","toChild","directionsService","maps","DirectionsService","directionsDisplay","DirectionsRenderer","start","end","self","route","origin","destination","optimizeWaypoints","travelMode","response","status","console","log","setDirections","routes","overview_path","alert","path","geodesic","options","strokeColor","strokeOpacity","strokeWeight","App","postFile","bind","assertThisInitialized","base64ToBlob","dataUri","error","stream","uri","blob","reader","FileReader","onloadend","event","fd","FormData","append","target","result","$","ajax","type","crossDomain","url","data","xhrFields","withCredentials","processData","contentType","done","readAsDataURL","dataURI","binary","atob","split","array","i","length","push","charCodeAt","Blob","Uint8Array","_this2","className","build_default","onTakePhoto","onCameraError","idealFacingMode","FACING_MODES","ENVIRONMENT","idealResolution","imageType","IMAGE_TYPES","JPG","imageCompression","isMaxResolution","isImageMirror","isDisplayStartCameraError","sizeFactor","onCameraStart","onCameraStop","Scanner","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fa4d4fc1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.03930ca6.svg\";","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons'\nimport '../assets/login.css'\nexport default class Login extends Component{\n    constructor() {\n        super();\n        this.state = {\n            toRegister: false,\n        }\n        this.renderChild = this.renderChild.bind(this);\n    }\n    renderChild() {\n        this.setState({toRegister: true});\n    }\n    render() {\n        if(this.state.toRegister == false) {\n            return(\n                <div className=\"login\">\n                    <h1 className=\"logo-title\">\n                        <FontAwesomeIcon icon={faMapMarkerAlt}/>\n                        SafeLy\n                    </h1>\n                    <button className=\"login-button bigBtn\" onClick={this.renderChild}>LOG IN</button>\n                </div>\n            );\n        } else {\n            return React.cloneElement(React.Children.only(this.props.children), {});\n        }\n        \n    }\n}","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons'\nimport '../assets/register.css'\nexport default class Register extends Component{\n    constructor() {\n        super();\n        this.state = {\n            toChild: false,\n        }\n        this.renderChild = this.renderChild.bind(this);\n    }\n    renderChild() {\n        this.setState({toChild: true});\n    }\n    render() {\n        if(this.state.toChild == false) {\n                return (\n                    <div className = \"register\">\n                        <h1 className=\"logo-title\">\n                            <FontAwesomeIcon icon={faMapMarkerAlt} />\n                            SafeLy\n                        </h1>\n                        <div className = \"container\">\n                            <div className = \"header\">\n\n                                <label>Sign up</label>\n                            </div>\n                            <div className = \"form\">\n                                <div className = \"element-inline\">\n                                    <div>\n                                        <label>First name</label>\n                                        <input type=\"text\"></input>\n                                    </div>\n                                    <div>\n                                        <label>Last name</label>\n                                        <input type=\"text\"></input>\n                                    </div>\n                                </div>\n                                <div className = \"element\">\n                                    <label>E-mail</label>\n                                    <input type=\"email\"></input>\n                                </div>\n                                <div className=\"element\">\n                                    <label>Password</label> \n                                    <input type =\"password\"></input>\n                                </div>\n                                <div className=\"element\">\n                                    <label>Confirm Password</label>\n                                    <input type=\"password\"></input>\n                                </div>\n                                <div className=\"element divider\">\n                                    <label>University</label>\n                                    <select name=\"uni\">\n                                        <option value=\"rmit\">RMIT</option>\n                                        <option value=\"unimelb\">University of Melbourne</option>\n\n                                    </select>\n                                </div>\n\n                                <div className=\"element\">\n                                    <button type=\"button\" class=\"bigBtn blueTheme\" onClick={this.renderChild}>Sign up</button>\n                                </div>\n\n                            </div>\n                            \n                        </div>\n                    </div>\n            );\n        } else {\n            return React.cloneElement(React.Children.only(this.props.children), {});\n        }\n    }\n}\n","import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\n\nconst mapStyles = {\n  position: 'absolute',\n  width: '100vw',\n  height: '250vw',\n  zIndex: 1,\n  marginTop: '-90%',\n  left: '50%',\n  transform: 'translateX(-50%)',\n  // borderRadius: '100%',\n  clipPath: 'circle(50% at 50% 50%)'\n};\n\nexport class MapContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentLocation: {\n          lat: -37.803835,\n         lng: 144.960655\n      }\n    }\n  }\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        zoom={14}\n        style={mapStyles}\n        initialCenter={this.state.currentLocation}\n      > \n        <Marker position= {this.state.currentLocation}/>\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDpjsS_Dw5a70HuU5LXjVuQHjPmc7jxc4E'\n})(MapContainer);","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMapMarkerAlt, faPlay } from '@fortawesome/free-solid-svg-icons'\nimport MapContainer from './Map';\n\nimport '../assets/register.css'\n\nexport default class SelectTime extends Component{\n    constructor(){\n        super();\n        this.state = {\n            toChild: false,\n            time: new Date(),\n            timeInterval: null,\n            leavingTime: \"\",\n        }\n        this.clearTime = this.clearTime.bind(this);\n        this.renderChild = this.renderChild.bind(this);\n    }\n\n    componentDidMount() {\n        var self=this;\n        this.setState({timeInterval: setInterval(function(){\n            self.setState({time: new Date()});\n        },1000)});\n    }\n\n    renderChild() {\n        this.setState({\n            toChild: true,\n        });\n\n    }\n\n    clearTime() {\n        clearInterval(this.state.timeInterval);\n    }\n    render(){\n        if(this.state.toChild == false) {\n            return(\n                <div className=\"selecttime\">\n                    <h1 className=\"logo-title\">\n                                <FontAwesomeIcon icon={faMapMarkerAlt} />\n                                SafeLy\n                    </h1>\n                    <div className=\"module\">\n                        <div className=\"instruction\">\n                            Select your desired time to leave.\n                                We will find a buddy to leave with you\n                        </div>\n                        <div className=\"sml-container\">\n                            <h3>Select your leaving time</h3>\n                            <div className=\"hourSelection\">\n                                <input type=\"number\" min=\"0\" max=\"23\" placeholder={this.state.time.getHours()} onClick = {this.clearTime}/>\n                                <div className=\"seperator\">:</div>\n                                <input type=\"number\" min=\"0\" max=\"59\" placeholder={this.state.time.getMinutes()} onClick = {this.clearTime}/>\n                                <div className=\"seperator\">:</div>\n                                <input type=\"number\" min=\"0\" max=\"59\" placeholder={this.state.time.getSeconds()} onClick = {this.clearTime}/>\n                            </div>\n                            <h3 className=\"blueTheme\">Gender Preference</h3>\n                            <div>\n                                <select className=\"genderpref\">\n                                    <option value=\"male\">Male</option>\n                                    <option value=\"female\">Female</option>\n\n                                </select>\n                            </div>\n                        <button className=\"centerbtn\" onClick={this.renderChild}>\n                            <FontAwesomeIcon icon={faPlay}/>\n                        </button>\n                        </div>\n                    </div>\n                    <MapContainer/>                 \n                </div>\n            )\n        } else {\n            return React.cloneElement(React.Children.only(this.props.children), {});\n        }\n    }\n}\n\n","import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker, Polyline } from 'google-maps-react';\n/* global google */\n\nconst google = window.google;\n\nexport class MapDirection extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentLocation: {\n         lat: -37.803835,\n         lng: 144.960655\n      },\n      finalPosition: {\n        lat: -37.7964,\n        lng: 144.9612\n      },\n      lineCoordinates: [{\n        lat: -37.803835,\n       lng: 144.960655\n    }, {\n      lat: -37.7964,\n      lng: 144.9612\n    },]\n    }\n  }\n\n  renderChild() {\n    this.setState({toChild: true});\n  }\n\n  componentDidMount() {\n\n    // Once the Google Maps API has finished loading, initialize the map\n    var directionsService = new window.google.maps.DirectionsService;\n    var directionsDisplay = new window.google.maps.DirectionsRenderer;\n    var start =this.state.currentLocation;\n    var end =this.state.finalPosition;\n    var self = this;\n    directionsService.route({\n      origin: start,\n      destination: end,\n      optimizeWaypoints: true,\n      travelMode: 'WALKING'\n    }, function(response, status) {\n      if (status === 'OK') {\n        console.log(response);\n        directionsDisplay.setDirections(response);\n        var route = response.routes[0];\n        self.setState({lineCoordinates: response.routes[0].overview_path});\n        // For each route, display summary information.\n      } else {\n        window.alert('Directions request failed due to ' + status);\n      }\n    });\n  }\n\n\n  render() {\n      return (\n        <Map\n          google={this.props.google}\n          zoom={16}\n          initialCenter={this.state.currentLocation}\n        > \n          <Marker position= {this.state.currentLocation}/>\n          <Polyline\n          path={this.state.lineCoordinates}\n          geodesic={false}\n          options={{\n              strokeColor: '#38B44F',\n              strokeOpacity: 1,\n              strokeWeight: 7,\n          }}\n        />\n        </Map>\n      ); \n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDpjsS_Dw5a70HuU5LXjVuQHjPmc7jxc4E'\n})(MapDirection);","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMapMarkerAlt, faCheck } from '@fortawesome/free-solid-svg-icons'\nimport MapContainer from './Map';\nimport Loading from '../assets/img/loading.svg'\nimport '../assets/register.css'\n\nexport default class Congrats extends Component{\n    constructor(){\n        super();\n        this.state = {\n            toChild: false\n        }\n        this.renderChild = this.renderChild.bind(this);\n    }\n\n    renderChild() {\n        this.setState({\n            toChild: true,\n        });\n    }\n\n    render(){\n        if(this.state.toChild == false) {\n            return(\n                \n                <div className=\"selecttime\">\n                    <h1 className=\"logo-title\">\n                                <FontAwesomeIcon icon={faMapMarkerAlt} />\n                                SafeLy\n                    </h1>\n                    <div className=\"module\">\n                        <div className=\"instruction\">\n                            Select your desired time to leave.\n                                We will find a buddy to leave with you\n                        </div>\n                        <div className=\"sml-container\">\n                            <h3>Congratulation!</h3>\n                            <div className=\"userList\">\n                                <div className=\"user\" style={{marginRight: \"1em\"}}></div>\n                                <div className=\"user\" style={{marginRight: \"1em\"}}></div>\n                                <div className=\"user\" style={{marginRight: \"1em\"}}></div>\n                            </div>\n\n                            <h3 className=\"blueTheme\">These are your buddies :)</h3>\n                            \n                        <button className=\"centerbtn success\" onClick={this.renderChild}>\n                            <FontAwesomeIcon icon={faCheck}/>\n                        </button>\n                        </div>\n                        \n                    </div>\n                    <MapContainer/>\n                    <div className=\"sml-container-rnd\">\n                            <h4>We're finding the nearest meet up place</h4>\n                            <img src={Loading}/>\n                    </div>\n                </div>\n            )\n        }\n        else {\n            return React.cloneElement(React.Children.only(this.props.children), {});\n        }\n    }\n}\n\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMapMarkerAlt, faCheck } from '@fortawesome/free-solid-svg-icons'\nimport MapContainer from './Map';\n\nimport '../assets/register.css'\n\nexport default class Qrcode extends Component{\n    constructor(){\n        super();\n        this.state = {\n            toChild:  false,\n        }\n    }\n    renderChild() {\n        this.setState({\n            toChild: true\n        })\n    }\n    render(){\n        if(this.state.toChild == false) {\n            return(\n                <div className=\"selecttime\">\n                     <h1 className=\"logo-title\">\n                                <FontAwesomeIcon icon={faMapMarkerAlt} />\n                                SafeLy\n                    </h1>\n                    <div className=\"circleBg\">\n                    </div>\n                    <div className=\"module\">\n                        <div className=\"instruction\">\n                            Scan this QR code below at the scanner :).\n                        </div>\n                        <div className=\"qr-container\">\n                            <img id=\"qrcode\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d0/QR_code_for_mobile_English_Wikipedia.svg/800px-QR_code_for_mobile_English_Wikipedia.svg.png\"/>\n                        </div>\n                        <div className=\"sml-container-sqr\">\n                            <div className=\"userWrapper\">\n                                <div className=\"status-container qr-arrive\">\n                                    <div className=\"user\">\n                                        <button className=\"user-checkbox\">\n                                        <FontAwesomeIcon icon={faCheck}/></button>\n                                    </div>\n                                    <div class=\"status arrived\">Arrived</div>\n                                </div>\n                                <div className=\"status-container qr-arrive\">\n                                    <div className=\"user\">\n                                        <button className=\"user-checkbox\">\n                                        <FontAwesomeIcon icon={faCheck}/></button>\n                                    </div>\n                                    <div class=\"status arrived\">Arrived</div>\n                                </div>\n                                <div className=\"status-container qr-arrive\">\n                                    <div className=\"user\">\n                                        <button className=\"user-checkbox\">\n                                        <FontAwesomeIcon icon={faCheck}/></button>\n                                    </div>\n                                    <div class=\"status otw\">On the way</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"outter\">\n                            <div className=\"securetext\">Security Guard</div>\n                                <div className=\"status-container\">\n                                        <div className=\"user\">\n                                            <button className=\"user-checkbox\">\n                                            <FontAwesomeIcon icon={faCheck}/></button>\n                                        </div>\n                                        <div class=\"status arrived\">Arrived</div>\n                                </div>\n                            </div>\n                        </div>\n    \n    \n                </div>\n            )\n        } else {\n            return React.cloneElement(React.Children.only(this.props.children), {});\n        }\n       \n    }\n}\n\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLifeRing, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons'\nimport MapDirection from './MapDirection';\n\nimport '../assets/MapDirection.css'\n\nexport default class Direction extends Component{\n    constructor() {\n        super();\n        this.state = {\n            toChild: false,\n        }\n        this.renderChild = this.renderChild.bind(this);\n    }\n\n    renderChild() {\n        this.setState({\n            toChild: true\n        })\n    }\n    render() {\n        if(this.state.toChild == false) {\n            return (\n                <div className = \"direction\">\n                    <div className=\"sml-container-rnd top\">\n                        <h4>Please follow direction to the meet up point</h4>\n                    </div>\n                    <div className=\"btn-controller\">\n                        <button className=\"round-btn\">  <FontAwesomeIcon icon={faLifeRing} /> SOS</button>\n                        <button className=\"round-btn\">  <FontAwesomeIcon icon={faTimes} /> Cancel</button>\n                    </div>\n                    <div className=\"bottomUI\">\n                        <button className=\"round-btn medium\" onClick = {this.renderChild }>I AM ARRIVED</button>\n                        <div className=\"bottom-container\">\n                            <div className=\"status-container\">\n                                <div className=\"user\">\n                                    <button className=\"user-checkbox\">\n                                    <FontAwesomeIcon icon={faCheck}/></button>\n                                </div>\n                                <div className=\"status arrived\">Arrived</div>\n                            </div>\n                            <div className=\"status-container\">\n                                 <div className=\"user\">\n                                    <button className=\"user-checkbox\">\n                                    <FontAwesomeIcon icon={faCheck}/></button>\n                                </div>\n                                <div className=\"status arrived\">Arrived</div>\n    \n                            </div>\n                            <div className=\"status-container\">\n                                <div className=\"user\">\n                                    <button className=\"user-checkbox\">\n                                    <FontAwesomeIcon icon={faCheck}/></button>\n                                </div>\n                                <div className=\"status otw\">On the way</div>\n                            </div>\n                        </div>\n                        \n    \n                    </div>\n                    <MapDirection\n                        googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDpjsS_Dw5a70HuU5LXjVuQHjPmc7jxc4E\"\n                        loadingElement={<div style={{ height: `100%` }} />}\n                        containerElement={<div style={{ height: `400px` }} />}\n                        mapElement={<div style={{ height: `100%` }} />}\n                        center={{ lat: -24.9923319, lng: 135.2252427 }}\n                        zoom={9}\n                    />\n                </div>\n            )\n        } else {\n            return React.cloneElement(React.Children.only(this.props.children), {});\n        }\n        \n    }\n}","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMapMarkerAlt, faLifeRing, faCheck } from '@fortawesome/free-solid-svg-icons'\nimport MapContainer from './Map';\n\nimport '../assets/register.css'\n\nexport default class End extends Component{\n    constructor(){\n        super();\n    }\n\n    render(){\n        return(\n            <div className=\"selecttime\">\n             \t<h1 className=\"logo-title\">\n                            <FontAwesomeIcon icon={faMapMarkerAlt} />\n                            SafeLy\n                </h1>\n\t\t\t\t<div className=\"module\">\n\t\t\t\t\t<div className=\"instruction\">\n\t\t\t\t\t\t<h3>YOU HAVE SAFELY ARRIVED!</h3>\n\t\t\t\t\t</div>\n                    <div className=\"sml-container-sqr\">\n                        <div className=\"userWrapper\">\n                            <div className=\"status-container qr-arrive\">\n                                <div className=\"user\">\n                                    <button className=\"user-checkbox\">\n                                    <FontAwesomeIcon icon={faCheck}/></button>\n                                </div>\n                                <div class=\"status arrived\">Arrived</div>\n                            </div>\n                            <div className=\"status-container qr-arrive\">\n                                <div className=\"user\">\n                                    <button className=\"user-checkbox\">\n                                    <FontAwesomeIcon icon={faCheck}/></button>\n                                </div>\n                                <div class=\"status arrived\">Arrived</div>\n                            </div>\n                            <div className=\"status-container qr-arrive\">\n                                <div className=\"user\">\n                                    <button className=\"user-checkbox\">\n                                    <FontAwesomeIcon icon={faCheck}/></button>\n                                </div>\n                                <div class=\"status arrived\">Arrived</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"instruction\">\n                        <h4>Your escort is done...</h4>\n                        <h4>For further assistance, we also provide the following service.</h4>\n                    </div>\n                    <div className=\"bottomWrapper\">\n                        <button className=\"centerSOS\">\n                            <FontAwesomeIcon icon={faLifeRing}/>\n                        </button>\n                        <h4>Emergency assistance</h4>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react';\nimport Camera, { FACING_MODES, IMAGE_TYPES } from 'react-html5-camera-photo';\nimport 'react-html5-camera-photo/build/css/index.css';\nimport $ from 'jquery';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.postFile = this.postFile.bind(this);\n    this.base64ToBlob = this.base64ToBlob.bind(this);\n  }\n  onTakePhoto (dataUri) {\n    // Do stuff with the photo...\n    console.log('takePhoto');\n    this.postFile(dataUri);\n  }\n \n  onCameraError (error) {\n    console.error('onCameraError', error);\n  }\n \n  onCameraStart (stream) {\n    console.log('onCameraStart');\n  }\n \n  onCameraStop () {\n    console.log('onCameraStop');\n  }\n\n  postFile(uri) {\n    var blob = this.base64ToBlob(uri);\n    var reader = new FileReader();\n    reader.onloadend = function(event){\n      var fd = new FormData();\n      fd.append('data', event.target.result);\n      alert(event.target.result);\n      $.ajax({\n          type: 'POST',\n          crossDomain: true,\n          url: 'https://10.25.130.237:5000/studentIDSub',\n          data: fd,\n          xhrFields: {\n            withCredentials: true\n         },\n          processData: false,\n          contentType: false\n      }).done(function(data) {\n          // print the output from the upload.php script\n          console.log(data);\n      });\n  };      \n  // trigger the read from the reader...\n  reader.readAsDataURL(blob);\n    \n  }\n\n  base64ToBlob(dataURI) \n  {\n      var binary = atob(dataURI.split(',')[1]);\n      var array = [];\n      for(var i = 0; i < binary.length; i++) {\n          array.push(binary.charCodeAt(i));\n      }\n      return new Blob([new Uint8Array(array)], {type: 'image/jpeg'});\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <Camera\n          onTakePhoto = { (dataUri) => { this.onTakePhoto(dataUri); } }\n          onCameraError = { (error) => { this.onCameraError(error); } }\n          idealFacingMode = {FACING_MODES.ENVIRONMENT}\n          idealResolution = {{width: 640, height: 480}}\n          imageType = {IMAGE_TYPES.JPG}\n          imageCompression = {0.97}\n          isMaxResolution = {false}\n          isImageMirror = {false}\n          isDisplayStartCameraError = {true}\n          sizeFactor = {1}\n          onCameraStart = { (stream) => { this.onCameraStart(stream); } }\n          onCameraStop = { () => { this.onCameraStop(); } }\n        />\n      </div>\n    );\n  }\n}\n \nexport default App;","import React, { Component } from 'react';\nimport './assets/main.css';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport SelectTime from './components/SelectTime';\nimport Congrats from './components/Congrats';\nimport Qrcode from './components/Qrcode';\nimport Directions from './components/Direction';\nimport End from './components/End';\nimport Scanner from './components/Scanner';\nclass App extends Component {\n\n  constructor() {\n    super();\n    // document.body.addEventListener(\"click\", function() {\n    //   var\n    //         el = document.documentElement\n    //       , rfs =\n    //              el.requestFullScreen\n    //           || el.webkitRequestFullScreen\n    //           || el.mozRequestFullScreen\n    //   ;\n    //   rfs.call(el);\n    // });\n  }\n\n  render() {\n    return (\n      // <Login> \n      //   <Register> \n      //     <SelectTime> \n      //       <Congrats> \n      //         <Directions> \n      //           <Qrcode>\n      //             <End />\n      //           </Qrcode>\n      //         </Directions>\n      //       </Congrats>\n      //     </SelectTime>\n      //   </Register>\n      // </Login>\n      <Scanner/>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}